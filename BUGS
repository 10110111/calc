If you notice something wrong, strange or broken, try rereading:

   README.FIRST
   HOWTO.INSTALL
   BUGS (this file)

If that does not help, cd to the calc source directory and try:

   make check

Look at the end of the output, it should say something like:

    9998: passed all tests  /\../\
    9999: Ending regression tests

If it does not, then something is really broken!

If you made and modifications to calc beyond the simple Makefile
configuration, try backing them out and see if things get better.

To be sure that your version of calc is up to date, check out:

	http://reality.sgi.com/chongo/tech/comp/calc/calc-download.html

The calc web site is located at:

	http://reality.sgi.com/chongo/tech/comp/calc

=-=

If you have tried all of the above and things still are not right,
then it may be time to send in a bug report.  You can send bug reports to:

    calc-tester@postofc.corp.sgi.com

When you send your report, please include the following information:

    * a description of the problem

    * the version of calc you are using (if you cannot get calc
      it to run, then send us the 4 #define lines from version.c)

    * if you modified calc from an official patch, send me the mods you made

    * the type of system you were using

    * the type of compiler you were using

    * any compiler warnings or errors that you saw

    * cd to the calc source directory, and type:

	make debug > debug.out 2>&1		(sh, ksh, bash users)
	make debug >& debug.out			(csh, tcsh users)

      and send the contents of the 'debug.out' file.

Stack traces from core dumps are useful to send as well.

=-=

Send any comments, compiler warning messages, suggestions and most
importantly, fixes (in the form of a context diff patch) to:

    calc-tester@postofc.corp.sgi.com

=-=

Known bugs:

    * Calc does not support the #! exec method.  For example of the
      following is placed in an executable file (assume the path to
      calc is correct) called /tmp/xyzzy:

	    #!/usr/local/bin/calc
	    /*
	     * comment
	     */
	    print 2+3;

      Will result in '"tmp" is undefined' and '"xyzzy" is undefined'
      error messages because calc considers $0 as an expression to
      evaluate.

    * The following file:

	    /* this is bugdemo.cal */
	    x = eval(prompt(">>> "));
	    print x;

      when executed as:

	    calc read bugdemo.cal

      will obtain a prompt from the terminal, print the value but leave
      the terminal in a 'bad' state, as if stty -icanon -echo -echoe
      had been executed.

    * Dec Alpha Linux compiling with gcc-2.95.1 and -O2 fails the
      regression test with:

	make -s check
	000: Beginning regression tests
	001: Some of these tests may take a while ...
	002: Within each section, output should be numbered sequentially
	003: parsed global definitions
	004: parsed vrfy()
	005: parsed prob(str)
	006: parsed getglobalvar()
	007: parsed test_booleans()
	008: parsed test_variables()
	make: *** [check] Segmentation fault (core dumped)

      Other programs have reported problems when compiling -O2 with
      gcc-2.95.1 on the Alpha and Mips.

      One work-a-round is to not compile with -O2 (perhaps just -O).
      Another work-a-round is not use gcc-2.95.1.

    We are sure some more bugs exist.  When you find them, please let
    us know!  See the above for details on how to report and were to
    EMail your bug reports and hopefully patches to fix them.
